<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="2019-07-18" name="publishExternalDate" /> 
  <meta content="products:SG_CAMPAIGN/CLASSIC;content_type:reference" name="cq:tags" /> 
  <meta content="Sending personalized alerts to operators" name="jcr:description" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="products:SG_CAMPAIGN/CLASSIC" name="primaryProductTag" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="audience:workflow" name="primaryAudienceTag" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="light" name="heroGradient" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="Sending personalized alerts to operators" name="jcr:title" /> 
  <meta content="" name="seoDescription" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="8c6dae2a-225c-4349-a402-72fbb071c7cf" name="jcr:predecessors" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="2019-08-06T06:59:18.812-0400" name="jcr:created" /> 
  <meta content="sauviat" name="contentOwner" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="90e0521f-2cca-4f59-9584-e3c7efa53391" name="jcr:uuid" /> 
  <meta content="Sending personalized alerts to operators" name="navTitle" /> 
 </head> 
 <body> 
  <p>In this example, we want to send an alert to an operator that will contain the name of profiles who opened a newsletter but did not click the link it contains.</p> 
  <p>The profiles' first and last name fields are linked to the <strong>Recipients</strong> targeting dimension, whereas the <strong>Alert</strong> activity is linked to the <strong>Operator</strong> targeting dimension. As a result, there is no field available between the two targeting dimensions to perform a reconciliation and retrieve the first and last name fields, and display them in the Alert activity.</p> 
  <p>The process is to build a workflow as below:</p> 
  <ol> 
   <li><p>Use a <strong>Query</strong> activity to target data.</p> </li> 
   <li><p>Add a <strong>JavaScript code</strong> activity into the workflow to save the population form the query to the instance variable.</p> </li> 
   <li><p>Use a <strong>Test</strong> activity to check the population count.</p> </li> 
   <li><p>Use an <strong>Alert</strong> activity to send an alert to an operator, depending on the <strong>Test</strong> activity result.</p> </li> 
  </ol> 
  <img alt="" captionBottom="" imageRotate="0" src="assets/uc_operator_1.png" title="uc_operator_1.png" /> 
  <h2 id="saving-the-population-to-the-instance-variable">Saving the population to the instance variable</h2> 
  <p>Add the code below into the <strong>JavaScript code</strong> activity.</p> 
  <codeblock gutter="true" class="syntax html">
    var&amp;nbsp;query&amp;nbsp;=&amp;nbsp;xtk.queryDef.create(&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;queryDef&amp;nbsp;schema="temp:query"&amp;nbsp;operation="select"&gt;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;select&gt;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;node&amp;nbsp;expr="[target/recipient.@firstName]"/&gt;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;node&amp;nbsp;expr="[target/recipient.@lastName]"/&gt;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/select&gt;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/queryDef&gt;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;);&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;var&amp;nbsp;items&amp;nbsp;=&amp;nbsp;query.ExecuteQuery(); 
  </codeblock> 
  <p>Make sure that the Javascript code corresponds to your workflow information:</p> 
  <ul> 
   <li><p>The <strong>queryDef schema</strong> tag should corresponds to the name of the targeting dimension used in the query activity.</p> </li> 
   <li><p>The <strong>node expr</strong> tag should correspond to the name of the fields you want to retrieve.</p> </li> 
  </ul> 
  <img alt="" captionBottom="" imageRotate="0" src="assets/uc_operator_3.png" title="uc_operator_3.png" /> 
  <p>To retrieve these information, follow the steps below:</p> 
  <ol> 
   <li><p>Right-click the outbound transition from the <strong>Query</strong> ativity, then select <strong>Display the target</strong>.</p> <img alt="" captionBottom="" imageRotate="0" src="assets/uc_operator_4.png" title="uc_operator_4.png" /></li> 
   <li><p>Right-click the list, then select <strong>Configure list</strong>.</p> <img alt="" captionBottom="" imageRotate="0" src="assets/uc_operator_5.png" title="uc_operator_5.png" /></li> 
   <li><p>The query targeting dimension and fields names display in the list.</p> <img alt="" captionBottom="" imageRotate="0" src="assets/uc_operator_6.png" title="uc_operator_6.png" /></li> 
  </ol> 
  <h2 id="testing-the-population-count">Testing the population count</h2> 
  <p>Add the code below into the <strong>Test</strong> activity to check if the targeted population contains at least 1 profile.</p> 
  <codeblock gutter="true" class="syntax html">
    var.recCount&gt;0 
  </codeblock> 
  <img alt="" captionBottom="" imageRotate="0" src="assets/uc_operator_7.png" title="uc_operator_7.png" /> 
  <h2 id="setting-up-the-alert">Setting up the alert</h2> 
  <p>Now that the population has been added into the instance variable with the desired fields, you can add these information into the <strong>Alert</strong> activity.</p> 
  <p>To do this, add into the <strong>Source</strong> tab the code below:</p> 
  <codeblock gutter="true" class="syntax html">
    &lt;ul&gt;!!discoiqbr!!&lt;%!!discoiqbr!!var&amp;nbsp;items&amp;nbsp;=&amp;nbsp;new&amp;nbsp;XML(instance.vars.items)!!discoiqbr!!for&amp;nbsp;each&amp;nbsp;(var&amp;nbsp;item&amp;nbsp;in&amp;nbsp;items){!!discoiqbr!!%&gt;!!discoiqbr!!&lt;li&gt;&lt;%=&amp;nbsp;item.target.@firstName&amp;nbsp;%&gt;&amp;nbsp;&lt;%=&amp;nbsp;item.target.@lastName&amp;nbsp;%&gt;&lt;/li&gt;!!discoiqbr!!&lt;%!!discoiqbr!!}&amp;nbsp;%&gt;&lt;/ul&gt; 
  </codeblock> 
  <note> 
   <p> The <strong>&lt;%= item.target.recipient.@fieldName %&gt;</strong> command lets you add one of the fields that have been saved to the instance variable through the <strong>JavaScript code</strong> activity.<br /> You can add as many fields as desired, as long as they have been inserted into the JavaScript code.<br /> </p> 
  </note> 
  <img alt="" captionBottom="" imageRotate="0" src="assets/uc_operator_8.png" title="uc_operator_8.png" /> 
 </body> 
</html>