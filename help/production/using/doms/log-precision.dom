<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="Log precision" name="jcr:title" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="" name="seoDescription" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="products:SG_CAMPAIGN/CLASSIC" name="primaryProductTag" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="2019-07-18" name="publishExternalDate" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="041f134e-8f14-4e23-9f27-f055466c7a28" name="jcr:predecessors" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="light" name="heroGradient" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="Log precision" name="jcr:description" /> 
  <meta content="71467d7c-c9a8-4416-b71a-446f93215247" name="jcr:uuid" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="audience:production" name="primaryAudienceTag" /> 
  <meta content="sauviat" name="contentOwner" /> 
  <meta content="products:SG_CAMPAIGN/CLASSIC;content_type:reference" name="cq:tags" /> 
  <meta content="2019-08-06T06:59:03.167-0400" name="jcr:created" /> 
  <meta content="Log precision" name="navTitle" /> 
  <meta content="" name="jcr:versionHistory" /> 
 </head> 
 <body> 
  <p>You can apply this process to all Adobe Campaign modules to increase log precision.</p> 
  <p>It involves relaunching the processes with a higher level of logs.</p> 
  <note>
    This procedure cancels the services in progress on this module. 
   <br /> 
  </note> 
  <p>Adobe Campaign can operate with two levels of log: </p> 
  <ol> 
   <li><p>The <strong>Verbose</strong> mode is the first level after the standard level. The following command activates it:</p> 
    <codeblock gutter="true" class="syntax html">
      nlserver&amp;nbsp;restart&amp;nbsp;&lt;MODULE_NAME&gt;&amp;nbsp;-verbose&amp;nbsp; 
    </codeblock><p>Check that the error actually occurred, and then restart the process in the normal way:</p> 
    <codeblock gutter="true" class="syntax html">
      nlserver&amp;nbsp;restart&amp;nbsp;&lt;MODULE_NAME&gt;&amp;nbsp;-noconsole 
    </codeblock></li> 
   <li><p>The <strong>TraceFilter</strong> mode, which lets you save the greatest number of logs. It is activated by the following command:</p> 
    <codeblock gutter="true" class="syntax html">
      nlserver&amp;nbsp;stop&amp;nbsp;&lt;MODULE_NAME&gt;;&amp;nbsp;nlserver&amp;nbsp;&lt;MODULE_NAME&gt;&amp;nbsp;-verbose&amp;nbsp;-tracefilter:* 
    </codeblock> 
    <note> 
     <p> If you use <strong>tracefilter:*</strong>, all log types are activated: ncm, rdr, nms, jst, timing, wdbc, ldap, soap, xtk, xtkquery, session, xtkwriter, network, pop3, inmail<br /> The most useful log types are: <strong>wdbc</strong> (displays all SQL queries), <strong>soap</strong> (displays all SOAP calls), <strong>ldap</strong> (displays all LDAP queries after authentication), <strong>xtkquery</strong> (displays the list of all the querydef).<br /> You can use them individually (<strong>tracefilter:soap,wdbc</strong> for example). You can also activate them all and choose to exclude certain others: <strong>-tracefilter:*,!soap</strong><br /> </p> 
    </note><p>Check that the error actually occurred, and then restart the process in the normal way:</p> 
    <codeblock gutter="true" class="syntax html">
      nlserver&amp;nbsp;restart&amp;nbsp;&lt;MODULE_NAME&gt;&amp;nbsp;-noconsole 
    </codeblock></li> 
  </ol> 
  <note>
    The logs of these commands are stored in the log file of the module. 
   <br /> 
  </note> 
  <p>Here is an example specific to the Web module. The other modules operate as indicated above.</p> 
  <p>Before sending this command, check that no job in progress will be affected.</p> 
  <codeblock gutter="true" class="syntax html">
    nlserver&amp;nbsp;pdump&amp;nbsp;-who 
  </codeblock> 
  <p>Next, shut down and restart the module in <strong>TraceFilter</strong> mode.</p> 
  <codeblock gutter="true" class="syntax html">
    nlserver&amp;nbsp;stop&amp;nbsp;web;&amp;nbsp;LD_PRELOAD=libjsig.so&amp;nbsp;nlserver&amp;nbsp;web&amp;nbsp;-tomcat&amp;nbsp;-verbose&amp;nbsp;-tracefilter:*&amp;nbsp;-tracefile:web_debug@default 
  </codeblock> 
  <p>Another example: </p> 
  <codeblock gutter="true" class="syntax html">
    nlserver&amp;nbsp;stop&amp;nbsp;mta@&lt;INSTANCE_NAME&gt;;&amp;nbsp;nlserver&amp;nbsp;mta&amp;nbsp;-instance:&lt;INSTANCE_NAME&gt;&amp;nbsp;-tracefilter:*&amp;nbsp;-tracefile:mta_debug@&lt;INSTANCE_NAME&gt; 
  </codeblock> 
  <note> 
   <p> The <strong>Tracefile</strong> mode lets you save the logs. In the examples above, the logs are saved in the <strong>var/ 
     <instance-name>
       /mta_debug.log 
     </instance-name></strong> and <strong>var/default/web_debug.log</strong> files.<br /> </p> 
  </note> 
  <note>
    In Windows, do not add the LD_PRELOAD option. The following command suffices: 
   <br /> nlserver web -tomcat -verbose -tracefilter:* 
  </note> 
  <p>Check that the problem occurs again, and then restart the module: </p> 
  <codeblock gutter="true" class="syntax html">
    nlserver&amp;nbsp;restart&amp;nbsp;web&amp;nbsp;-tomcat&amp;nbsp;-noconsole 
  </codeblock> 
  <p>All information is available in the file <strong>/usr/local/neolane/nl6/var/default/log/web.log</strong>.</p> 
 </body> 
</html>